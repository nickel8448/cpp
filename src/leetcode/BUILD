# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_binary
cc_binary(
  name = "fibonacci_sum",
  srcs = ["fibonacci_sum.cc"],
)

cc_binary(
  name = "maxdepth",
  srcs = ["maxdepth.cc"],
)

cc_binary(
  name = "middle_of_linked_list",
  srcs = ["middle_of_linked_list.cc"],
)

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_library
cc_library(
  name = "majority_element",
  srcs = ["majority_element.cc"],
  hdrs = ["majority_element.h"],
  visibility = ["//visibility:public"],
)

cc_binary(
  name = "majority_element_binary",
  srcs = ["majority_element.cc", "majority_element.h"],
)

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_binary
cc_binary(
  name = "remove_duplicates_binary",
  srcs = ["remove_duplicates.cc"],
)

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_library
cc_library(
  name = "remove_duplicates",
  srcs = ["remove_duplicates.cc"],
  hdrs = ["remove_duplicates.h"],
  visibility = ["//visibility:public"],
)

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_library
cc_library(
  name = "isomorphic_string",
  srcs = ["isomorphic_strings.cc"],
  hdrs = ["isomorphic_strings.h"],
  visibility = ["//visibility:public"],
)

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_binary
cc_binary(
  name = "isomorphic_string_binary",
  srcs = [
    "isomorphic_strings.cc",
    "isomorphic_strings.h",],
)

cc_library(
  name = "split_balanced_string",
  srcs = ["split_balanced_string.cc"],
  hdrs = ["split_balanced_string.h"],
  visibility = ["//visibility:public"],
)

# https://docs.bazel.build/versions/master/be/c-cpp.html#cc_binary
cc_binary(
  name = "split_balanced_binary",
  srcs = ["split_balanced_string.cc", "split_balanced_string.h"],
)

cc_binary(
  name = "reverse_words_binary",
  srcs = ["reverse_words_in_a_string.cc", "reverse_words_in_a_string.h"],
)

cc_library(
  name = "reverse_words",
  srcs = ["reverse_words_in_a_string.cc"],
  hdrs = ["reverse_words_in_a_string.h"],
  visibility = ["//visibility:public"],
)

cc_library(
  name = "add_strings",
  srcs = ["add_strings.cc"],
  hdrs = ["add_strings.h"],
  visibility = ["//visibility:public"],
)

cc_library(
  name = "length_of_last_word",
  srcs = ["strings/length_of_last_word.cc"],
  hdrs = ["strings/length_of_last_word.h"],
  visibility = ["//visibility:public"],
)
